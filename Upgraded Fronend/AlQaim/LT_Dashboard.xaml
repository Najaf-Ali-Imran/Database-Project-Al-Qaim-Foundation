<Page x:Class="AlQaim.LT_Dashboard"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
      xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
      xmlns:local="clr-namespace:AlQaim"
      mc:Ignorable="d"
      d:DesignHeight="850" d:DesignWidth="900"
      Title="Laboratory Technician Dashboard"
      Background="#f5f8fa">

    <Page.Resources>
        <!-- Color Palette -->
        <SolidColorBrush x:Key="PrimaryBackground" Color="#F5F8FA"/>
        <SolidColorBrush x:Key="SecondaryBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="CardBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="AccentColor" Color="#2E86DE"/>
        <SolidColorBrush x:Key="AccentColorLight" Color="#54A0FF"/>
        <SolidColorBrush x:Key="AccentColorDark" Color="#0063B1"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#26de81"/>
        <SolidColorBrush x:Key="WarningColor" Color="#F79F1F"/>
        <SolidColorBrush x:Key="DangerColor" Color="#FC5C65"/>
        <SolidColorBrush x:Key="InfoColor" Color="#45aaf2"/>
        <SolidColorBrush x:Key="TabBorderBrushSelected" Color="#2e86de"/>
        <SolidColorBrush x:Key="TabBorderBrushNormal" Color="Transparent"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#2D3436"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#636E72"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E6ECF0"/>
        <SolidColorBrush x:Key="NotesBackground" Color="#FDFEFE"/>
        <SolidColorBrush x:Key="TaskCompletedColor" Color="#E3FCEF"/>
        <SolidColorBrush x:Key="TaskPendingColor" Color="#FFF6E5"/>
        <SolidColorBrush x:Key="TaskUrgentColor" Color="#FFE6E9"/>

        <!-- Text Styles -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>
        <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>
        <Style x:Key="SectionTitleStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Medium"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
        <Style x:Key="BodyTextStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineHeight" Value="18"/>
        </Style>
        <Style x:Key="MetricTitleStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        </Style>
        <Style x:Key="MetricValueStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI Bold"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        </Style>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="15" ShadowDepth="0.5" Direction="270" Opacity="0.1" Color="#000000"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.02" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.02" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Original Icon Button Style -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F0F5FF"/>
                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NEW: Modern Rounded Button Style (For Header Controls) -->
        <Style x:Key="ModernHeaderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="15" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColorLight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColorDark}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NEW: Modern Rounded ComboBox Style (For Header Controls) -->
        <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="MainBorder" CornerRadius="15"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="20" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="ContentSite"
                                                      IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                    <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                                                  Style="{x:Null}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Focusable="False"
                                                  ClickMode="Press" Background="Transparent" BorderBrush="Transparent">
                                        <Path x:Name="Arrow" Grid.Column="1"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Fill="{StaticResource TextSecondary}"
                                              Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,8,0"/>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup" Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource SecondaryBackground}"
                                            BorderThickness="1" CornerRadius="5" Margin="0,2,0,0"
                                            BorderBrush="{StaticResource BorderColor}">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="270" Opacity="0.1" Color="#000000"/>
                                        </Border.Effect>
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource AccentColorLight}"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Notification Item Style -->
        <Style x:Key="NotificationItemStyle" TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>

        <!-- Animation Storyboards -->
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation From="0" To="1" Duration="0:0:0.4" Storyboard.TargetProperty="Opacity">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="CountUpStoryboard">
            <DoubleAnimation From="0" Duration="0:0:1.5">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

      
        <Style TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for the ScrollBar Thumb -->
        <Style x:Key="ModernScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="thumbBorder"
                                Background="{StaticResource AccentColor}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="6"
                                SnapsToDevicePixels="True"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="{StaticResource AccentColorLight}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="{StaticResource AccentColorDark}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Implicit Style for the ScrollBar itself -->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="MinWidth" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="True" Opacity="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ModernScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Fade In Track on MouseOver -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
       
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Style for Task Item Action Button -->
        <Style x:Key="TaskActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColorLight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColorDark}"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="Completed">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SuccessColor}"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Page.Resources>

    <!-- Main Grid Layout -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="320"/>
        </Grid.ColumnDefinitions>

        <!-- Main Content Area -->
        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel Margin="20,20,15,20">

                <!-- Header Section -->
                <StackPanel Orientation="Vertical" Margin="0,0,0,15">
                    <TextBlock x:Name="WelcomeText" Text="Welcome, Lab Technician!" Style="{StaticResource HeaderTextStyle}"/>
                    <TextBlock x:Name="DateTimeText" Text="Loading Date/Time..." Style="{StaticResource BodyTextStyle}" Opacity="0.7"/>
                </StackPanel>

                <!-- Metrics Cards Section -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Style="{StaticResource CardStyle}" Name="PendingSamplesCard">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Pending Collections" Style="{StaticResource MetricTitleStyle}"/>
                                <Border Grid.Column="1" Background="#EBF5FF" CornerRadius="6" Width="35" Height="35">
                                    <fa:IconBlock Icon="Flask" Foreground="{StaticResource AccentColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <TextBlock Grid.Row="1" x:Name="PendingSamplesCount" Text="0" Style="{StaticResource MetricValueStyle}" Margin="0,10,0,8"/>
                            <Border Grid.Row="2" Height="35" Margin="0,5,0,0">
                                <lvc:CartesianChart Series="{Binding PendingSamplesSeries}" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisX>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>#2E86DE</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                </lvc:CartesianChart>
                            </Border>
                        </Grid>
                    </Border>
                    <Border Grid.Column="1" Style="{StaticResource CardStyle}" Name="PendingResultsCard">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Pending Test Results" Style="{StaticResource MetricTitleStyle}"/>
                                <Border Grid.Column="1" Background="#FFF6E5" CornerRadius="6" Width="35" Height="35">
                                    <fa:IconBlock Icon="ClipboardList" Foreground="{StaticResource WarningColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <TextBlock Grid.Row="1" x:Name="PendingResultsCount" Text="0" Style="{StaticResource MetricValueStyle}" Margin="0,10,0,8"/>
                            <Border Grid.Row="2" Height="35" Margin="0,5,0,0">
                                <lvc:CartesianChart Series="{Binding PendingResultsSeries}" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisX>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>#F79F1F</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                </lvc:CartesianChart>
                            </Border>
                        </Grid>
                    </Border>
                    <Border Grid.Column="2" Style="{StaticResource CardStyle}" Name="CompletedTestsCard">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Completed Tests" Style="{StaticResource MetricTitleStyle}"/>
                                <Border Grid.Column="1" Background="#E3FCEF" CornerRadius="6" Width="35" Height="35">
                                    <fa:IconBlock Icon="CheckCircle" Foreground="{StaticResource SuccessColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <TextBlock Grid.Row="1" x:Name="CompletedTestsCount" Text="0" Style="{StaticResource MetricValueStyle}" Margin="0,10,0,8"/>
                            <Border Grid.Row="2" Height="35" Margin="0,5,0,0">
                                <lvc:CartesianChart Series="{Binding CompletedTestsSeries}" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisX>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>#26de81</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                </lvc:CartesianChart>
                            </Border>
                        </Grid>
                    </Border>
                    <Border Grid.Column="3" Style="{StaticResource CardStyle}" Name="NewRequestsCard">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="New Requests" Style="{StaticResource MetricTitleStyle}"/>
                                <Border Grid.Column="1" Background="#FFE6E9" CornerRadius="6" Width="35" Height="35">
                                    <fa:IconBlock Icon="FileAlt" Foreground="{StaticResource DangerColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <TextBlock Grid.Row="1" x:Name="NewRequestsCount" Text="0" Style="{StaticResource MetricValueStyle}" Margin="0,10,0,8"/>
                            <Border Grid.Row="2" Height="35" Margin="0,5,0,0">
                                <lvc:CartesianChart Series="{Binding NewRequestsSeries}" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisX>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis ShowLabels="False" IsEnabled="False"/>
                                    </lvc:CartesianChart.AxisY>
                                    <lvc:CartesianChart.SeriesColors>
                                        <lvc:ColorsCollection>
                                            <Color>#FC5C65</Color>
                                        </lvc:ColorsCollection>
                                    </lvc:CartesianChart.SeriesColors>
                                </lvc:CartesianChart>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>

                <!-- Main Chart Area -->
                <Border Style="{StaticResource CardStyle}" Margin="8,15,8,8" MinHeight="332">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Style="{StaticResource SubHeaderTextStyle}" Text="Test Data Overview"/>

                            <!-- MODIFIED: Applied New Styles to ComboBox and Button -->
                            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                                <ComboBox x:Name="TimeRangeComboBox"
                                          Style="{StaticResource ModernComboBoxStyle}"
                                          Width="120" SelectedIndex="0" Margin="0,0,8,0" SelectionChanged="TimeRangeComboBox_SelectionChanged" Background="White" >
                                    <ComboBoxItem Content="Last 7 Days"/>
                                    <ComboBoxItem Content="Last 30 Days"/>
                                    <ComboBoxItem Content="Last 90 Days"/>
                                </ComboBox>
                                <Button Style="{StaticResource ModernHeaderButtonStyle}" ToolTip="Export Data">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:IconBlock Icon="FileDownload" Width="14" Height="14" Margin="0,0,5,0"/>
                                        <TextBlock Text="Export" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Grid>

                        <!-- Chart TabControl -->
                        <Grid Grid.Row="1" Margin="0,10,0,0">
                            <TabControl BorderThickness="0" Background="Transparent" Padding="0">
                                <TabControl.Resources>
                                    <Style TargetType="TabItem">
                                        <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TabItem">
                                                    <Border Name="Border"
                                                            Margin="0,0,6,0"
                                                            BorderThickness="0,0,0,3"
                                                            Padding="12,8"
                                                            Background="Transparent"
                                                            BorderBrush="{StaticResource TabBorderBrushNormal}">
                                                        <ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TabBorderBrushSelected}"/>
                                                            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="False">
                                                            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource AccentColorLight}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TabControl.Resources>
                                <TabItem Header="Results Trend">
                                    <lvc:CartesianChart Series="{Binding TestResultsSeries}" LegendLocation="Bottom" Margin="0,20,0,5">
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis Title="Date" Labels="{Binding TestDates}" FontSize="11" Foreground="{StaticResource TextSecondary}"/>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis Title="Count" FontSize="11" MinValue="0" Foreground="{StaticResource TextSecondary}"/>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </TabItem>
                                <TabItem Header="Test Types">
                                    <lvc:PieChart Series="{Binding TestTypesSeries}" LegendLocation="Right" InnerRadius="50" Margin="0,25,-10,5">
                                        <lvc:PieChart.ChartLegend>
                                            <lvc:DefaultLegend BulletSize="12" FontSize="11"/>
                                        </lvc:PieChart.ChartLegend>
                                        <lvc:PieChart.DataTooltip>
                                            <lvc:DefaultTooltip BulletSize="12" />
                                        </lvc:PieChart.DataTooltip>
                                    </lvc:PieChart>
                                </TabItem>
                                <TabItem Header="Sample Sources">
                                    <lvc:CartesianChart Series="{Binding SampleSourcesSeries}" LegendLocation="Bottom" Margin="0,20,0,5">
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis Title="Source" Labels="{Binding SourceLabels}" FontSize="11" Foreground="{StaticResource TextSecondary}"/>
                                        </lvc:CartesianChart.AxisX>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis Title="Count" FontSize="11" MinValue="0" Foreground="{StaticResource TextSecondary}"/>
                                        </lvc:CartesianChart.AxisY>
                                    </lvc:CartesianChart>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </Grid>
                </Border>

                <Border Style="{StaticResource CardStyle}" Margin="8,15,8,8" x:Name="AdminTasksCard">
                   
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                           
                            <RowDefinition Height="*"/>
                           
                        </Grid.RowDefinitions>

                        <!-- Task Section Header -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,15">
                            <fa:IconBlock Icon="Tasks" Foreground="{StaticResource AccentColor}" Width="18" Height="18" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <TextBlock Style="{StaticResource SubHeaderTextStyle}" Text="Admin Tasks Assigned" VerticalAlignment="Center"/>
                        </StackPanel>

                        <!-- Task List Area -->
                        <Grid Grid.Row="1">
                           
                            <!-- TODO: Replace ItemsSource binding with your actual ObservableCollection from MySQL data -->
                            <ItemsControl x:Name="AdminTasksItemsControl" ItemsSource="{Binding AdminTasks}"
                                          HorizontalContentAlignment="Stretch">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!-- Template for a Single Task Item -->
                                        <Border BorderBrush="{StaticResource BorderColor}" BorderThickness="0,0,0,1" Padding="0,10" Margin="0,0,0,5">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    
                                                    <ColumnDefinition Width="*"/>
                                                  
                                                    <ColumnDefinition Width="Auto"/>
                                                   
                                                </Grid.ColumnDefinitions>

                                                <!-- Status Indicator -->
                                                <Border Grid.Column="0" Width="30" Height="30" CornerRadius="15" Margin="0,0,15,0" VerticalAlignment="Center">
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background" Value="{StaticResource TaskPendingColor}"/>
                                                            <!-- Default: Pending -->
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status}" Value="Completed">
                                                                    <Setter Property="Background" Value="{StaticResource TaskCompletedColor}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Priority}" Value="Urgent">
                                                                    <Setter Property="Background" Value="{StaticResource TaskUrgentColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <fa:IconBlock HorizontalAlignment="Center" VerticalAlignment="Center" Width="14" Height="14">
                                                        <fa:IconBlock.Style>
                                                            <Style TargetType="fa:IconBlock">
                                                                <Setter Property="Icon" Value="Clock"/>
                                                                <!-- Default: Pending -->
                                                                <Setter Property="Foreground" Value="{StaticResource WarningColor}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Status}" Value="Completed">
                                                                        <Setter Property="Icon" Value="Check"/>
                                                                        <Setter Property="Foreground" Value="{StaticResource SuccessColor}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Priority}" Value="Urgent">
                                                                        <Setter Property="Icon" Value="ExclamationTriangle"/>
                                                                        <Setter Property="Foreground" Value="{StaticResource DangerColor}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </fa:IconBlock.Style>
                                                    </fa:IconBlock>
                                                </Border>

                                                <!-- Task Details -->
                                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                                    <TextBlock Text="{Binding TaskName}" FontWeight="Medium" FontSize="13" Foreground="{StaticResource TextPrimary}" Margin="0,0,0,2"/>
                                                    <TextBlock Style="{StaticResource BodyTextStyle}" FontSize="12" Opacity="0.8">
                                                         <Run Text="Due: "/>
                                                         <Run Text="{Binding DueDate, StringFormat='MMM dd, yyyy'}"/>
                                                         <Run Text=" | Priority: "/>
                                                         <Run Text="{Binding Priority}"/>
                                                    </TextBlock>
                                                </StackPanel>

                                                <!-- Action Button -->
                                                <!-- TODO: Add Click event handler/Command in code-behind to handle task completion/action -->
                                                <Button Grid.Column="2" Content="Mark Done" Style="{StaticResource TaskActionButtonStyle}" Tag="{Binding Status}"
                                                        CommandParameter="{Binding TaskId}" />
                                                <!-- Example: Click="TaskActionButton_Click" -->

                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!-- Placeholder if no tasks  -->
                            <!--
                            <TextBlock Text="No tasks assigned." Style="{StaticResource BodyTextStyle}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,30"
                                       Visibility="{Binding HasAdminTasks, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                            -->
                        </Grid>
                    </Grid>
                </Border>


            </StackPanel>
        </ScrollViewer>

        <!-- Side Panel (Notes and Notifications) -->
        <Border Grid.Column="1" Background="{StaticResource SecondaryBackground}" BorderBrush="{StaticResource BorderColor}" BorderThickness="1,0,0,0" Margin="0,97,0,0">
            <Grid Margin="15,20,15,15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                    <fa:IconBlock Icon="StickyNote" Foreground="{StaticResource AccentColor}" Width="18" Height="18" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    <TextBlock Style="{StaticResource SectionTitleStyle}" Text="Quick Notes"/>
                </StackPanel>
                <Border Grid.Row="1" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" CornerRadius="6" Background="{StaticResource NotesBackground}" MinHeight="100" Margin="0,0,0,20">
     
                    <TextBox BorderThickness="0" Background="Transparent" Padding="10" AcceptsReturn="True" TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top"
                             Foreground="{StaticResource TextPrimary}" FontSize="13"
                             Text="Need to review samples for Lab 3 before 2 PM.
Remember to calibrate spectrometer."/>
                </Border>
                <Grid Grid.Row="2" Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Style="{StaticResource SectionTitleStyle}" Text="Notifications" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="See All" Foreground="{StaticResource AccentColorLight}" VerticalAlignment="Center" Cursor="Hand" FontSize="12"/>
                </Grid>
    
                <ScrollViewer Grid.Row="3" VerticalScrollBarVisibility="Auto">
                    <StackPanel x:Name="NotificationsPanel">
         
                        <Border Style="{StaticResource NotificationItemStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="{StaticResource DangerColor}" Opacity="0.1" CornerRadius="6" Width="40" Height="40" Margin="0,0,15,0">
                                    <fa:IconBlock Icon="Bell" Foreground="{StaticResource DangerColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="System Maintenance Notice" FontFamily="Segoe UI Semibold" FontSize="13" Foreground="{StaticResource TextPrimary}" Margin="0,0,0,2"/>
                                    <TextBlock Style="{StaticResource BodyTextStyle}" Text="Lab system under maintenance tonight 11 PM - 2 AM."/>
                                    <TextBlock Text="3 hours ago" Foreground="{StaticResource TextSecondary}" FontSize="11" Margin="0,4,0,0" Opacity="0.8"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource NotificationItemStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="{StaticResource AccentColor}" Opacity="0.1" CornerRadius="6" Width="40" Height="40" Margin="0,0,15,0">
                                    <fa:IconBlock Icon="Truck" Foreground="{StaticResource AccentColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="New Samples Arrived" FontFamily="Segoe UI Semibold" FontSize="13" Foreground="{StaticResource TextPrimary}" Margin="0,0,0,2"/>
                                    <TextBlock Style="{StaticResource BodyTextStyle}" Text="12 new samples from Clinic B ready for processing."/>
                                    <TextBlock Text="5 hours ago" Foreground="{StaticResource TextSecondary}" FontSize="11" Margin="0,4,0,0" Opacity="0.8"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource NotificationItemStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="{StaticResource WarningColor}" Opacity="0.1" CornerRadius="6" Width="40" Height="40" Margin="0,0,15,0">
                                    <fa:IconBlock Icon="ExclamationTriangle" Foreground="{StaticResource WarningColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="Urgent: Analysis Required" FontFamily="Segoe UI Semibold" FontSize="13" Foreground="{StaticResource TextPrimary}" Margin="0,0,0,2"/>
                                    <TextBlock Style="{StaticResource BodyTextStyle}" Text="Dr. Williams requested urgent processing for #2845."/>
                                    <TextBlock Text="10 minutes ago" Foreground="{StaticResource TextSecondary}" FontSize="11" Margin="0,4,0,0" Opacity="0.8"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Style="{StaticResource NotificationItemStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="{StaticResource InfoColor}" Opacity="0.1" CornerRadius="6" Width="40" Height="40" Margin="0,0,15,0">
                                    <fa:IconBlock Icon="InfoCircle" Foreground="{StaticResource InfoColor}" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="Results Verified" FontFamily="Segoe UI Semibold" FontSize="13" Foreground="{StaticResource TextPrimary}" Margin="0,0,0,2"/>
                                    <TextBlock Style="{StaticResource BodyTextStyle}" Text="Batch #45892 results verified and updated."/>
                                    <TextBlock Text="35 minutes ago" Foreground="{StaticResource TextSecondary}" FontSize="11" Margin="0,4,0,0" Opacity="0.8"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Border>
    </Grid>
</Page>