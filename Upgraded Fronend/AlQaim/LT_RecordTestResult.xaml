<Page x:Class="AlQaim.LT_RecordTestResult"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:local="clr-namespace:AlQaim"
      xmlns:models="clr-namespace:AlQaim.Models"
      xmlns:converters="clr-namespace:AlQaim.Converters"

    mc:Ignorable="d"
      d:DesignHeight="750" d:DesignWidth="1100"
      Title="Record Test Results"
      Loaded="Page_Loaded">

    <Page.Resources>
     
        <SolidColorBrush x:Key="PrimaryBackColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryBackColor" Color="#F4F7FE"/>
        <SolidColorBrush x:Key="PrimaryAccentColor" Color="#4361EE"/>
        <SolidColorBrush x:Key="SecondaryAccentColor" Color="#3A0CA3"/>
        <SolidColorBrush x:Key="TextColor" Color="#333333"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E1E5EB"/>
        <SolidColorBrush x:Key="LightGrayColor" Color="#F2F2F2"/>
        <SolidColorBrush x:Key="GrayTextColor" Color="#888888"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#10B981"/>
        <SolidColorBrush x:Key="WarningColor" Color="#F59E0B"/>
        <SolidColorBrush x:Key="DangerColor" Color="#EF4444"/>
        <SolidColorBrush x:Key="InfoColor" Color="#3B82F6"/>
        <SolidColorBrush x:Key="WarningColorTransparent" Color="#33F59E0B"/>
        <SolidColorBrush x:Key="InfoColorTransparent" Color="#333B82F6"/>
        <SolidColorBrush x:Key="SuccessColorTransparent" Color="#3310B981"/>
        <SolidColorBrush x:Key="CompletedColorTransparent" Color="#33AAAAAA"/>
        <SolidColorBrush x:Key="CompletedColor" Color="#888888"/>
        <SolidColorBrush x:Key="WhiteBrush" Color="#FFFFFF"/>

  
        <converters:StringIsNullOrEmptyConverter x:Key="StringIsNullOrEmptyConverter"/>
        <converters:AlternatingRowBackgroundConverter x:Key="AlternatingRowBackgroundConverter"
                                                     EvenRowBrush="{StaticResource PrimaryBackColor}"
                                                     OddRowBrush="{StaticResource SecondaryBackColor}"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

     

        <Style x:Key="ComboBoxToggleButtonSimpleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="Transparent" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}" CornerRadius="6" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">

                                <Path x:Name="arrow" Data="F1 M 0,0 L 4,4 L 8,0 Z" Fill="{StaticResource TextColor}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="#BFBFBF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                         CornerRadius="6" 
                         Padding="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="ModernButton" TargetType="Button">

            <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryAccentColor}"/>

            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryAccentColor}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="1" BlurRadius="4" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernSecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Style.Triggers>
                
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BorderColor}"/>
                    <Setter Property="Effect" Value="{x:Null}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryAccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryAccentColor}"/>
                                <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Padding" Value="10,0,30,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" Background="{StaticResource PrimaryBackColor}" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" CornerRadius="6" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonSimpleStyle}"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="toggleButton" Value="{StaticResource PrimaryAccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <Setter Property="BorderBrush" TargetName="toggleButton" Value="{StaticResource PrimaryAccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FieldLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryAccentColor}"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>

        <Style x:Key="CardPanel" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="25"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="15" ShadowDepth="2" Opacity="0.08" Color="#555555"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StatusChipStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="90"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Pending">
                    <Setter Property="Background" Value="{StaticResource WarningColorTransparent}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="In Progress">
                    <Setter Property="Background" Value="{StaticResource InfoColorTransparent}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Completed">
                    <Setter Property="Background" Value="{StaticResource CompletedColorTransparent}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandToggleStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTip" Value="Expand/Collapse Result Entry"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent">
                            <Path x:Name="IconPath" Width="14" Height="14" Stretch="Uniform"
                                  Fill="{StaticResource PrimaryAccentColor}"
                                  Data="M12,16 L8,12 L12,8 L12,16 M4,16 L4,8 L8,12 L4,16Z"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="IconPath" Property="Data" Value="M8,8 L12,12 L8,16 L8,8 M16,8 L16,16 L12,12 L16,8Z"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="IconPath" Property="Fill" Value="{StaticResource SecondaryAccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ModernDataGridCell" TargetType="DataGridCell">
            <!-- Uses TextColor -->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                    <!-- Direct Value -->
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernDataGridColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="10,12"/>
        </Style>

        <Style x:Key="ModernDataGridRow" TargetType="DataGridRow">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=AlternationIndex, Converter={StaticResource AlternatingRowBackgroundConverter}}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LightGrayColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernDataGrid" TargetType="DataGrid">
          
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondaryBackColor}"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CellStyle" Value="{StaticResource ModernDataGridCell}"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource ModernDataGridColumnHeader}"/>
            <Setter Property="RowStyle" Value="{StaticResource ModernDataGridRow}"/>
        </Style>

       
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
        </Storyboard>

    </Page.Resources>

    <Grid Background="{StaticResource SecondaryBackColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header Section -->
        <Grid Grid.Row="0" Margin="30,25,30,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <TextBlock Text="Record Test Results" FontSize="24" FontWeight="Bold" Foreground="{StaticResource TextColor}" Margin="0,0,0,5"/>
            </StackPanel>
            <Button Grid.Column="1" Content="Refresh Data" Style="{StaticResource ModernSecondaryButton}" Click="RefreshButton_Click"/>
        </Grid>

        <!-- Main Content Area -->
        <Grid Grid.Row="1" Margin="30,0,30,30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition x:Name="RightPanelColumn" Width="420"/>
            </Grid.ColumnDefinitions>

            <!-- Left Panel -->
            <Border Grid.Column="0" Style="{StaticResource CardPanel}" Margin="0,0,15,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Pending Tests Worklist" Style="{StaticResource SectionHeader}"/>
                    <Grid Grid.Row="1" Margin="0,0,0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- SearchTextBox using basic style + C# handlers -->
                        <TextBox Grid.Column="0"
                                 Style="{StaticResource ModernTextBox}"
                                 Tag="Search by Sample ID, Patient, or Test"
                                 x:Name="SearchTextBox"
                                 TextChanged="SearchTextBox_TextChanged"
                                 GotKeyboardFocus="SearchTextBox_GotKeyboardFocus"
                                 LostKeyboardFocus="SearchTextBox_LostKeyboardFocus"
                                 Margin="0,0,10,0"/>

                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Foreground="{StaticResource TextColor}"
                                  x:Name="StatusFilterComboBox" Width="180" Margin="0,0,10,0" SelectedIndex="0"
                                  SelectionChanged="StatusFilter_SelectionChanged">
                            <ComboBoxItem Content="All Statuses"/>
                            <ComboBoxItem Content="Pending"/>
                            <ComboBoxItem Content="In Progress"/>
                            <ComboBoxItem Content="Completed"/>
                        </ComboBox>
                        <ComboBox Grid.Column="2" Style="{StaticResource ModernComboBox}" Foreground="{StaticResource TextColor}"
                                  x:Name="SortOptionComboBox" Width="200" SelectedIndex="0"
                                  SelectionChanged="SortOption_SelectionChanged">
                            <ComboBoxItem Content="Collection Date (Newest)"/>
                            <ComboBoxItem Content="Collection Date (Oldest)"/>
                            <ComboBoxItem Content="Sample ID"/>
                            <ComboBoxItem Content="Patient Name"/>
                        </ComboBox>
                    </Grid>
                    <DataGrid Grid.Row="2" x:Name="PendingTestsDataGrid" Style="{StaticResource ModernDataGrid}"
                              AlternationCount="2" SelectedCellsChanged="PendingTestsDataGrid_SelectedCellsChanged" Margin="0,0,-1,-1">
                        <DataGrid.Resources>
                            <!-- Define RowStyle/CellStyle overrides here if needed, otherwise they come from ModernDataGrid style -->
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Sample ID" Binding="{Binding SampleId}" Width="1.2*"/>
                            <DataGridTextColumn Header="Patient Name" Binding="{Binding PatientName}" Width="2*"/>
                            <DataGridTextColumn Header="Test Panel" Binding="{Binding TestName}" Width="2.5*"/>
                            <DataGridTextColumn Header="Collected" Binding="{Binding CollectionDateTime, StringFormat='MM/dd/yy HH:mm'}" Width="1.5*"/>
                            <DataGridTemplateColumn Header="Status" Width="1.3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Style="{StaticResource StatusChipStyle}">
                                            <!-- Triggers in StatusChipStyle handle Background -->
                                            <TextBlock Text="{Binding Status}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                        <Setter Property="FontSize" Value="12"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="Pending">
                                                                <Setter Property="Foreground" Value="{StaticResource WarningColor}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="In Progress">
                                                                <Setter Property="Foreground" Value="{StaticResource InfoColor}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Status}" Value="Completed">
                                                                <Setter Property="Foreground" Value="{StaticResource CompletedColor}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Actions" Width="Auto" MinWidth="90">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Record" FontSize="12" Height="30" Width="80"
                                                Padding="10,0"
                                                Click="RecordButton_Click"
                                                CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource ModernSecondaryButton}">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="Completed">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                            <Setter Property="Content" Value="View"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>

            <!-- Right Panel -->
            <Border Grid.Column="1" Style="{StaticResource CardPanel}" Margin="15,0,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Right Panel Header & Expand Toggle -->
                    <Grid Grid.Row="0" Margin="0,0,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Test Result Entry" Style="{StaticResource SectionHeader}" Margin="0"/>
                        <ToggleButton Grid.Column="1" x:Name="ExpandToggleButton" VerticalAlignment="Center"
                                      Style="{StaticResource ExpandToggleStyle}"
                                      Checked="ExpandToggleButton_Checked" Unchecked="ExpandToggleButton_Unchecked"
                                      Visibility="Collapsed"/>
                    </Grid>

                    <!-- ScrollViewer for Entry Content -->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="0,10,0,15" Padding="0,0,5,0">
                        <Grid>
                            <!-- Entry Form Panel (Animated) -->
                            <StackPanel x:Name="ResultEntryPanel" Opacity="0" Visibility="Collapsed">
                                <!-- Sample Information Card -->
                                <Border Background="{StaticResource SecondaryBackColor}" BorderThickness="1" BorderBrush="{StaticResource BorderColor}" CornerRadius="8" Padding="15" Margin="0,0,0,20">
                                    <StackPanel DataContext="{Binding ElementName=PendingTestsDataGrid, Path=SelectedItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" FontSize="14" FontWeight="SemiBold" Text="Sample Information"/>
                                            <TextBlock Grid.Column="1" FontSize="13" FontWeight="Medium" Foreground="{StaticResource PrimaryAccentColor}" Text="{Binding SampleId, TargetNullValue='Select Sample'}"/>
                                        </Grid>
                                        <Separator Margin="0,10,0,10" Background="{StaticResource BorderColor}"/>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="90"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Patient:" Style="{StaticResource FieldLabel}" Margin="0,0,0,8"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" FontSize="13" FontWeight="Medium" Margin="0,0,0,8" Text="{Binding PatientName, TargetNullValue='-'}"/>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Collection:" Style="{StaticResource FieldLabel}" Margin="0,0,0,8"/>
                                            <TextBlock Grid.Row="1" Grid.Column="1" FontSize="13" FontWeight="Medium" Margin="0,0,0,8" Text="{Binding CollectionDateTime, StringFormat='MM/dd/yyyy HH:mm', TargetNullValue='-'}"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Test Panel:" Style="{StaticResource FieldLabel}" Margin="0,0,0,0"/>
                                            <TextBlock Grid.Row="2" Grid.Column="1" FontSize="13" FontWeight="Medium" Margin="0,0,0,0" Text="{Binding TestName, TargetNullValue='-'}"/>
                                        </Grid>
                                    </StackPanel>
                                </Border>

                                <!-- View Container - Switches between Progressive and Full -->
                                <Grid>
                                    <!-- Progressive (Single Component) Entry View -->
                                    <StackPanel x:Name="ProgressiveEntryPanel" Visibility="Visible">
                                        <TextBlock Text="Test Component" Style="{StaticResource FieldLabel}"/>
                                        <ComboBox x:Name="TestComponentComboBox" Style="{StaticResource ModernComboBox}" Foreground="{StaticResource TextColor}"
                                                  Margin="0,0,0,15" SelectionChanged="TestComponentComboBox_SelectionChanged"
                                                  DisplayMemberPath="ComponentName"/>

                                        <TextBlock Text="Result Value" Style="{StaticResource FieldLabel}"/>
                                        <Grid Margin="0,0,0,15">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Grid.Column="0" x:Name="ResultValueTextBox" Style="{StaticResource ModernTextBox}" Foreground="{StaticResource TextColor}" Margin="0,0,10,0" LostFocus="ResultValueTextBox_LostFocus"/>
                                            <TextBlock Grid.Column="1" x:Name="UnitOfMeasureText" MinWidth="70" TextAlignment="Left" Padding="5,0" FontSize="13" Opacity="0.8" VerticalAlignment="Center" Text="Units"/>
                                        </Grid>

                                        <TextBlock Text="Flag As" Style="{StaticResource FieldLabel}"/>
                                        <ComboBox x:Name="FlagComboBox" Style="{StaticResource ModernComboBox}" Foreground="{StaticResource TextColor}" Margin="0,0,0,15" MinWidth="150" HorizontalAlignment="Left" Height="35" SelectionChanged="FlagComboBox_SelectionChanged">
                                            <ComboBoxItem Content="Normal"/>
                                            <ComboBoxItem Content="Low"/>
                                            <ComboBoxItem Content="High"/>
                                            <ComboBoxItem Content="Critical Low"/>
                                            <ComboBoxItem Content="Critical High"/>
                                            <ComboBoxItem Content="Abnormal"/>
                                        </ComboBox>

                                        <TextBlock Text="Comments (Optional)" Style="{StaticResource FieldLabel}"/>
                                        <TextBox x:Name="CommentsTextBox" Style="{StaticResource ModernTextBox}" Foreground="{StaticResource TextColor}" TextWrapping="Wrap" AcceptsReturn="True" Height="100" VerticalContentAlignment="Top" Margin="0,0,0,20" LostFocus="CommentsTextBox_LostFocus"/>

                                        <Border Background="{StaticResource SecondaryBackColor}" BorderThickness="1" BorderBrush="{StaticResource BorderColor}" CornerRadius="8" Padding="15">
                                            <StackPanel>
                                                <TextBlock Text="Reference Range" FontSize="14" FontWeight="SemiBold"/>
                                                <Separator Margin="0,10,0,10" Background="{StaticResource BorderColor}"/>
                                                <TextBlock FontSize="13" FontWeight="Medium" x:Name="ReferenceRangeText" Text="-"/>
                                            </StackPanel>
                                        </Border>
                                    </StackPanel>

                                    <!-- Full Panel Entry View -->
                                    <ItemsControl x:Name="FullPanelItemsControl" Visibility="Collapsed">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:TestComponentResult}">
                                                <Border BorderBrush="{StaticResource BorderColor}" BorderThickness="0,0,0,1" Padding="0,10" Margin="0,0,0,10">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="140"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding ComponentName}" Style="{StaticResource FieldLabel}" Margin="0,0,10,8"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ReferenceRangeWithUnits}" FontSize="12" Opacity="0.7" HorizontalAlignment="Right" VerticalAlignment="Center"/>

                                                        <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource ModernTextBox}" Foreground="{StaticResource TextColor}"
                                                                 Height="35" Margin="0,0,10,0"
                                                                 Text="{Binding Value, UpdateSourceTrigger=LostFocus}"/>

                                                        <ComboBox Grid.Row="1" Grid.Column="2" Style="{StaticResource ModernComboBox}" Foreground="{StaticResource TextColor}"
                                                                  Height="35" HorizontalAlignment="Stretch"
                                                                  SelectedValue="{Binding Flag, UpdateSourceTrigger=PropertyChanged}"
                                                                  SelectedValuePath="Content">
                                                            <ComboBoxItem Content="Normal"/>
                                                            <ComboBoxItem Content="Low"/>
                                                            <ComboBoxItem Content="High"/>
                                                            <ComboBoxItem Content="Critical Low"/>
                                                            <ComboBoxItem Content="Critical High"/>
                                                            <ComboBoxItem Content="Abnormal"/>
                                                        </ComboBox>

                                                        <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource ModernTextBox}" Foreground="{StaticResource TextColor}"
                                                                 TextWrapping="Wrap" AcceptsReturn="True" Height="40" FontSize="12" VerticalContentAlignment="Top"
                                                                 Margin="0,8,0,0"
                                                                 Text="{Binding Comment, UpdateSourceTrigger=LostFocus}"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>

                            </StackPanel>

                            <!-- Empty State Message -->
                            <Grid x:Name="EmptyStatePanel" VerticalAlignment="Center" Visibility="Visible">
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock FontSize="16" TextAlignment="Center" Foreground="{StaticResource TextColor}" Opacity="0.5" Text="No Test Selected" FontWeight="Medium"/>
                                    <TextBlock FontSize="14" TextAlignment="Center" Margin="0,10,0,0" Foreground="{StaticResource TextColor}" Opacity="0.5" TextWrapping="Wrap" MaxWidth="300" x:Name="EmptyStateMessageTextBlock" Text="Select a pending test from the worklist on the left to record its results."/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </ScrollViewer>

                    <!-- Action Buttons -->
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0"
                                Visibility="{Binding ElementName=ResultEntryPanel, Path=Visibility}">
                        <Button Content="Cancel" Style="{StaticResource ModernSecondaryButton}" Width="120" Margin="0,0,10,0" Click="CancelButton_Click"/>
                        <Button Content="Submit Results" Style="{StaticResource ModernSecondaryButton}" Width="150" Click="SubmitButton_Click"/>
                    </StackPanel>

                </Grid>
            </Border>
        </Grid>
        <Border x:Name="toastNotification"
                Grid.Row="1" 
            Background="{StaticResource PrimaryAccentColor}"
                CornerRadius="8"
                Padding="15,12"
                Width="350"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Margin="0,20,0,0"
                Visibility="Collapsed"
                Panel.ZIndex="999">
            <!-- Ensure it appears above other content -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <iconPacks:PackIconMaterial Grid.Column="0"
                                            xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                                            x:Name="toastIcon"
                                            Kind="CheckCircle"
                                            Width="20"
                                            Height="20"
                                            Foreground="White"
                                            VerticalAlignment="Center"/>

                <TextBlock Grid.Column="1" 
   x:Name="toastMessage" 
   Text="Operation completed successfully!" 
   Foreground="White"
   VerticalAlignment="Center"
   Margin="10,0,0,0"/>

                <Button Grid.Column="2" 
x:Name="btnCloseToast" 
Style="{StaticResource IconButtonStyle}"
Background="Transparent"
HorizontalAlignment="Right"
Click="BtnCloseToast_Click">
                    <iconPacks:PackIconMaterial Kind="Close" Width="14" Height="14" Foreground="White"/>
                </Button>
            </Grid>
        </Border>
    </Grid>
</Page>