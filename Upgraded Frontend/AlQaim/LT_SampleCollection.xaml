<Page x:Class="AlQaim.LT_SampleCollection"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:AlQaim"
    mc:Ignorable="d"
      d:DesignHeight="650" d:DesignWidth="900"
      >
   

    <Page.Resources>
        <SolidColorBrush x:Key="PrimaryBackColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryBackColor" Color="#F4F7FE"/>
        <SolidColorBrush x:Key="PrimaryAccentColor" Color="#4361EE"/>
        <SolidColorBrush x:Key="SecondaryAccentColor" Color="#3A0CA3"/>
        <SolidColorBrush x:Key="TextColor" Color="#333333"/>
        <SolidColorBrush x:Key="BorderColor" Color="#E1E5EB"/>
        <SolidColorBrush x:Key="LightGrayColor" Color="#F2F2F2"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#2ECC71"/>
        <SolidColorBrush x:Key="WarningColor" Color="#F39C12"/>
        <SolidColorBrush x:Key="DangerColor" Color="#E74C3C"/>
        <Style x:Key="ModernButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryAccentColor}"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="4" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                CornerRadius="6">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0"
                                                                  Margin="10,0,0,0"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}" 
                                                    HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"/>
                                                <Path x:Name="Arrow" Grid.Column="1"
                                                      Fill="{StaticResource TextColor}"
                                                      Data="M0,0 L4,4 L8,0 Z"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <!-- Fixed ContentPresenter binding -->
                            <ContentPresenter x:Name="ContentPresenter"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide"
                                   Focusable="False">
                                <Border x:Name="DropBorder"
                                        Background="{StaticResource PrimaryBackColor}"
                                        BorderBrush="{StaticResource BorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="6"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Effect}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" MaxHeight="200">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom DataGrid Style -->
        <Style x:Key="ModernDataGrid" TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="RowBackground" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondaryBackColor}"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
            <!-- Ensure columns fill available space -->
            <Setter Property="ColumnWidth" Value="*"/>
        </Style>

        <!-- DataGrid Column Header Style -->
        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        </Style>

        <!-- DataGrid Cell Style -->
        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <!-- Remove focus visual -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Date/Time Picker Style -->
        <Style x:Key="ModernDatePicker" TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="Padding" Value="10,6"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Label Style -->
        <Style x:Key="FieldLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>

        </Style>

        <!-- Section Header Style -->
        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryAccentColor}"/>
            <!-- Using Secondary Accent for headers -->
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <!-- Card Panel Style -->
        <Style x:Key="CardPanel" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource PrimaryBackColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Error Message Style -->
        <Style x:Key="ErrorMessage" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource DangerColor}"/>
            <!-- Assumed resource -->
            <Setter Property="Margin" Value="0,3,0,0"/>
        </Style>

        <!-- Success Message Style -->
        <Style x:Key="SuccessMessage" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource SuccessColor}"/>
            <!-- Assumed resource -->
            <Setter Property="Margin" Value="0,3,0,0"/>
        </Style>
    </Page.Resources>

    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid Margin="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Page Header -->
                <Grid Grid.Row="0" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <!-- Using Material Design Icon if available, otherwise Path -->
                        <!-- Option 1: Material Design Icon (Requires NuGet Package)
                        <Border Width="40" Height="40" Background="{StaticResource PrimaryAccentColor}" CornerRadius="8" Margin="0,0,15,0">
                             <materialDesign:PackIcon Kind="FolderUpload" Foreground="White" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
                         </Border>
                        -->
                        <!-- Option 2: Path Icon (as originally provided) -->

                        <TextBlock Text="Sample Collection"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource TextColor}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>


                </Grid>

                <!-- Main Content -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left Panel - Form -->
                    <Border Grid.Column="0" Style="{StaticResource CardPanel}" Margin="0,0,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Form Header -->
                            <TextBlock Grid.Row="0"
                                       Text="New Sample Entry"
                                       Style="{StaticResource SectionHeader}"/>

                            <!-- Form Fields -->
                            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="0,10,0,0">
                                <StackPanel>
                                    <!-- Patient Selection -->
                                    <TextBlock Text="Patient" Style="{StaticResource FieldLabel}"/>
                                    <ComboBox x:Name="PatientComboBox"
                                              Style="{StaticResource ModernComboBox}"
                                              Margin="0,0,0,15"
                                              DisplayMemberPath="FullName"
                                              SelectedValuePath="PatientId"
                                              IsEditable="True" 
                                        StaysOpenOnEdit="True">

                                    </ComboBox>
                                    <TextBlock x:Name="PatientErrorMessage"
                                               Style="{StaticResource ErrorMessage}"
                                               Visibility="Collapsed"
                                               Text="Please select a patient"/>

                                    <!-- Sample ID -->
                                    <Grid Margin="0,0,0,15">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0">
                                            <TextBlock Text="Sample ID" Style="{StaticResource FieldLabel}"/>
                                            <TextBox x:Name="SampleIdTextBox"
                                                     Style="{StaticResource ModernTextBox}"
                                                     Margin="0,0,10,0"
                                                     IsReadOnly="True"
                                                     Text="SAM-YYYYMMDD-NNNN"/>
                                            <!-- Placeholder Text -->
                                        </StackPanel>

                                        <Button Grid.Column="1"
                                                Content="Generate"
                                                Style="{StaticResource ModernButton}"
                                                Margin="0,21,0,0" 
                                            VerticalAlignment="Top"
                                                Click="GenerateSampleId_Click" Height="50"/>
                                    </Grid>
                                    <TextBlock x:Name="SampleIdErrorMessage"
                                               Style="{StaticResource ErrorMessage}"
                                               Visibility="Collapsed"
                                               Text="Sample ID cannot be empty"/>

                                    <!-- Sample Type -->
                                    <TextBlock Text="Sample Type" Style="{StaticResource FieldLabel}"/>
                                    <ComboBox x:Name="SampleTypeComboBox"
                                              Style="{StaticResource ModernComboBox}"
                                              Margin="0,0,0,15">
                                        <!-- Consider binding this list from code-behind or a ViewModel -->
                                        <ComboBoxItem Content="Blood"/>
                                        <ComboBoxItem Content="Urine"/>
                                        <ComboBoxItem Content="Saliva"/>
                                        <ComboBoxItem Content="Tissue"/>
                                        <ComboBoxItem Content="Cerebrospinal Fluid"/>
                                        <ComboBoxItem Content="Sputum"/>
                                        <ComboBoxItem Content="Swab"/>
                                    </ComboBox>
                                    <TextBlock x:Name="SampleTypeErrorMessage"
                                               Style="{StaticResource ErrorMessage}"
                                               Visibility="Collapsed"
                                               Text="Please select a sample type"/>

                                    <!-- Collection Date/Time -->
                                    <Grid Margin="0,0,0,15">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                            <TextBlock Text="Collection Date" Style="{StaticResource FieldLabel}"/>
                                            <DatePicker x:Name="CollectionDatePicker"
                                                        Style="{StaticResource ModernDatePicker}"
                                                         />
                                            <!-- Initial value -->
                                            <TextBlock x:Name="DateErrorMessage"
                                                       Style="{StaticResource ErrorMessage}"
                                                       Visibility="Collapsed"
                                                       Text="Please select a valid date"/>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1">
                                            <TextBlock Text="Collection Time" Style="{StaticResource FieldLabel}"/>
                                            <!-- Consider using a Time Picker control if available -->
                                            <TextBox x:Name="CollectionTimeTextBox"
                                                     Style="{StaticResource ModernTextBox}" Height="31"
                                                     />
                                            <!-- Initial value -->
                                            <TextBlock x:Name="TimeErrorMessage"
                                                       Style="{StaticResource ErrorMessage}"
                                                       Visibility="Collapsed"
                                                       Text="Please enter a valid time (HH:mm)"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- Additional Notes -->
                                    <TextBlock Text="Additional Notes" Style="{StaticResource FieldLabel}"/>
                                    <TextBox x:Name="NotesTextBox"
                                             Style="{StaticResource ModernTextBox}"
                                             MinHeight="100"
                                             TextWrapping="Wrap"
                                             AcceptsReturn="True"
                                             VerticalScrollBarVisibility="Auto"
                                             Margin="0,0,0,15"
                                             materialDesign:HintAssist.Hint="Enter any additional notes about the sample here..."
                                             Text=""/>
                                    <!-- Clear initial placeholder text -->
                                </StackPanel>
                            </ScrollViewer>

                            <!-- Form Actions -->
                            <Grid Grid.Row="2" Margin="0,15,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Feedback Message -->
                                <TextBlock x:Name="FeedbackMessage"
                                           Grid.Column="0"
                                           VerticalAlignment="Center"
                                           Visibility="Collapsed"
                                           Style="{StaticResource SuccessMessage}"
                                           Text="Sample successfully submitted!"/>

                                <!-- Clear Button -->
                                <Button Grid.Column="1"
                                        Content="Clear Form"
                                        Margin="0,0,10,0"
                                        Background="Transparent"
                                        Foreground="{StaticResource TextColor}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource BorderColor}"
                                        Padding="15,8"
                                        Cursor="Hand"
                                        Click="ClearForm_Click">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <!-- Keep base properties like padding, cursor -->
                                            <Setter Property="Padding" Value="15,8"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border x:Name="Bd"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="6"
                                                                Padding="{TemplateBinding Padding}">
                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <!-- Override specific properties -->
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <!-- Use a slightly different background on hover -->
                                                    <Setter Property="Background" Value="{StaticResource LightGrayColor}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.6"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Submit Button -->
                                <Button Grid.Column="2"
                                        Content="Submit Sample"
                                        Style="{StaticResource ModernButton}"
                                        Click="SubmitSample_Click"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- Right Panel - Recent Samples -->
                    <Border Grid.Column="1" Style="{StaticResource CardPanel}" Margin="10,0,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Text="Recent Samples"
                                       Style="{StaticResource SectionHeader}"/>

                            <DataGrid Grid.Row="1"
                                      x:Name="RecentSamplesGrid"
                                      Style="{StaticResource ModernDataGrid}"
                                      AutoGenerateColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding RecentSamples}" 
                                Margin="0,10,0,0">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Sample ID" Binding="{Binding SampleId}" Width="*"/>
                                    <DataGridTextColumn Header="Type" Binding="{Binding SampleType}" Width="Auto"/>
                                    <DataGridTextColumn Header="Date" Binding="{Binding CollectionDate, StringFormat={}{0:MM/dd/yy}}" Width="Auto"/>
                                    <DataGridTemplateColumn Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="View"
                                                        Background="Transparent"
                                                        Foreground="{StaticResource PrimaryAccentColor}"
                                                        BorderThickness="0"
                                                        FontWeight="SemiBold"
                                                        Cursor="Hand"
                                                        Click="ViewSample_Click"
                                                        Tag="{Binding}"/>
                                           
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>

                               
                               
                            </DataGrid>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
</Page>